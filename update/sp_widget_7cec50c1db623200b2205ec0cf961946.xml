<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category/>
        <client_script><![CDATA[function ($scope, $sce, $location, spUtil, $rootScope) {
	var c = this;
	
	// Listener for category filtering
	$rootScope.$on('selectedCat', function(event, data) {
		c.data.category = data;
		c.data.textQuery = c.data.q;
		c.server.update();
	});
	
	// Listener for department filtering
	$rootScope.$on('selectedDept', function(event, data) {	
		c.data.selectedDepts = data;
		c.data.textQuery = c.data.q;
		c.data.deptQuery = "";
		
		// check for All - do nothing in that case
		if (data.length == 1) {
			if (data[0].name != "All")
				c.data.deptQuery = "author=" + data[0].id;
		} else { // get all departments and add to query
			for (var i = 0; i < data.length; i++) {
				if (i == data.length - 1)
					c.data.deptQuery += "author=" + data[i].id;
				else
					c.data.deptQuery += "author=" + data[i].id + "^OR";
			}
		}
		
		c.server.update();
	});
	
	// Listener for knowledge base filtering
	$rootScope.$on('selectedKB', function(event, data) {
		c.data.kbId = data.id;
		c.data.textQuery = c.data.q;
		c.server.update();
	});
	
	spUtil.setSearchPage($scope.data.t);

	$scope.getBGImage = function(item) {
		return {"background-image": "url('" + item.picture + "')"};
	}

	$scope.highlight = function(haystack, needle) {
		if (!haystack)
			return "";

		if (!needle)
			return $sce.trustAsHtml(haystack);

		return $sce.trustAsHtml(haystack.replace(new RegExp(needle, "gi"), function(match) {
			return '<mark class="highlight">' + match + '</mark>';
		}));
	}
}
]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>ucd-search-page</id>
        <internal>false</internal>
        <link/>
        <name>ucd_Search Page</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
	// Populate the data object
	data.kbase = '7c2d56f42bd89200e0b209d417da153e'; // IT - Public
	data.t = $sp.getParameter('t');	// Currently only KB type
	data.q = decodeURI($sp.getParameter('q'));	// Text query
	data.count = 30;	// Article limit
	
	// Populate results array and ScopedAPI instance
	data.results = [];
	var api = new ScopedPortalAPI();
	
		// Knowledge Base selected
	if(input && input.kbId) {
		data.kbase = input.kbId;
	}
	// Set up basic query for IT - Public Knowledge base
	var kbArt = new GlideRecord('kb_knowledge');
	var query = "";
	query += 'kb_knowledge_base=' + data.kbase;
	//query += '^ORDERBYDESCsys_view_count'; // Removed to have search results weighted by field instead of view count
	
	// Category/department filtering both need to save the input
	if (input) {
		data.q = input.textQuery;
		query += '^123TEXTQUERY321=' + data.q;
	}
	
	// If departments have been selected, add to all queries
	if (input && input.deptQuery) {
		data.deptQuery = input.deptQuery;
		query += "^" + input.deptQuery;
	}
	
	// User selected a category to filter by
	if (input && input.category) {
		// Use ScopedPortalAPI to fetch articles w/ a filter
		api.getKBCategoryArticlesFiltered(input.category, data.results, query, data.kbase);

		// Strip text within articles
		for (var i = 0; i < data.results.length; ++i) {
			data.results[i].text = $sp.stripHTML(data.results[i].text) + "";
			data.results[i].text = data.results[i].text.substring(0,200)+"...";
		}
		
		// Sort the articles based on the view_count data member
		/*data.results.sort(function(a,b) {
			return b.view_count - a.view_count;
		});*/	// Removed to have search results weighted by field instead of view count
	} else {	// Query w/o category selection
		query += '^123TEXTQUERY321=' + data.q;
		kbArt.setLimit(data.count);
		kbArt.addEncodedQuery(query);
		kbArt.addQuery('kb_knowledge_base', data.kbase);
		kbArt.addQuery('workflow_state','published');
		kbArt.query();
		while (kbArt.next()) {
			if (!$sp.canReadRecord("kb_knowledge", kbArt.getUniqueValue()))
				continue;
			
			// Build article objects for displaying to the user
			var article = {};
			$sp.getRecordDisplayValues(article, kbArt, 'sys_id,number,short_description,published,text');
			article.type = "kb";
			if (!article.text)
				article.text = "";
			article.text = $sp.stripHTML(article.text) + "";
			article.text = article.text.substring(0, 200)+"...";
			data.results.push(article);
		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>josephdt12</sys_created_by>
        <sys_created_on>2017-05-03 17:19:47</sys_created_on>
        <sys_id>7cec50c1db623200b2205ec0cf961946</sys_id>
        <sys_mod_count>137</sys_mod_count>
        <sys_name>ucd_Search Page</sys_name>
        <sys_package display_value="UCD Portal Demo" source="x_uocd2_ucd_portal">c2fa136f139176003527bd122244b0f5</sys_package>
        <sys_policy/>
        <sys_scope display_value="UCD Portal Demo">c2fa136f139176003527bd122244b0f5</sys_scope>
        <sys_update_name>sp_widget_7cec50c1db623200b2205ec0cf961946</sys_update_name>
        <sys_updated_by>admin-aztan</sys_updated_by>
        <sys_updated_on>2017-09-11 18:41:52</sys_updated_on>
        <template><![CDATA[<div class="l-content">
  <div class="panel o-box--large">
    <!-- No results section -->
    <div ng-if="data.results.length==0">
      <div class="heading--weighted">
        <h4 class="panel-title">
          ${No results}
        </h4></div>
      <div class="panel-body wrapper break-word">
        <p>${Your search - <b>{{data.q}}</b> - did not match any documents}</p>
        <p>${Suggestions}:</p>
        <ul>
          <li>${Make sure all words are spelled correctly}</li>
          <li>${Try different, more general, or fewer keywords}</li>
        </ul>
      </div>
    </div>
    <!-- Search results title -->
    <div ng-if="data.results.length>0" class="break-word">
      <h2 class="heading--weighted">
        <span class="heading--weighted--weighted">Search</span> 
        Results for '{{data.q}}'</h2>
    </div>
    <!-- Search result items --> 
    <div ng-repeat="item in data.results" class="teaser-search">
        <a href="?id=ucd_kb_article&amp;sys_id={{item.sys_id}}">
          <h3 ng-bind-html="highlight(item.short_description, data.q)"></h3>
        </a>
        <p ng-bind-html="highlight(item.text, data.q)"></p>
        <ul class="list--pipe text--gray">
          <li>${Article}: {{item.number}}</li>
          <li>${Published}: <sn-day-ago date="item.published"/><li>
        </ul>
      </div>
    </div>
  </div>

<!-- without styling 
<div>
  <div class="panel panel-default">
    <!-- No results section 
    <div ng-if="data.results.length==0">
      <div class="panel-heading"><h4 class="panel-title">${No results}</h4></div>
      <div class="panel-body wrapper break-word">
        <p>${Your search - <b>{{data.q}}</b> - did not match any documents}</p>
        <p>${Suggestions}:</p>
        <ul>
          <li>${Make sure all words are spelled correctly}</li>
          <li>${Try different, more general, or fewer keywords}</li>
        </ul>
      </div>
    </div>
    <!-- Search results title 
    <div ng-if="data.results.length>0" class="panel-heading break-word">
      <h4 class="panel-title">${Search results for '{{data.q}}'}</h4>
    </div>

    <div ng-repeat="item in data.results" class="panel-body b-b ">
      <div>
        <a href="?id=ucd_kb_article&amp;sys_id={{item.sys_id}}" class="h4 text-primary m-b-sm block">
          <i class="fa fa-book m-r-sm"></i>
          <span ng-bind-html="highlight(item.short_description, data.q)"></span></a>
        <p ng-bind-html="highlight(item.text, data.q)"></p>
        <span class="text-muted">${Article}: {{item.number}}</span>
        <span class="text-muted">
          <span class="m-l-xs m-r-xs"> &middot; </span>
          ${Published}: <sn-day-ago date="item.published"/>
        </span>
      </div>
    </div>
  </div>
</div>
-->
]]></template>
    </sp_widget>
</record_update>
