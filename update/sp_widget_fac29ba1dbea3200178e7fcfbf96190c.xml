<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category/>
        <client_script><![CDATA[function ($scope, $rootScope, $timeout, spUtil, snRecordWatcher, spModal, $window) {
  var c = this;
	
  $scope.showWidget = "";
	
	c.active = "true";
	c.data.rejectionComments = '';
		//Listening for "showHideWidget" event
	$rootScope.$on('showHideWidget', function(event,data) {
		$scope.showWidget = data;
		c.selectedStuff = data;
		if(c.active == "true") {
			setFilter("active", data);
		} else if(c.active == "false") {
			setFilter("inactive", data);
		}
	  });
	
	//Listening for "showActive" event
  $rootScope.$on('showActive', function(event,data){
  	// change filter
	setFilter("active", c.selectedStuff);
	});
	
	//Listening for "showInactive" event
  $rootScope.$on('showInactive', function(event,data){
  	// change filter
	setFilter("inactive", c.selectedStuff);
	});
	
  if ($scope.options.portal == true || $scope.options.portal == 'true') {
    $scope.contentColClass = "col-xs-12";
	$scope.options.portal = true;
	} else {
		$scope.options.portal = false;
		$scope.contentColClass = "col-sm-9";
	}

	$scope.data.op = "";
  snRecordWatcher.initList("sysapproval_approver", "state=requested^approver=" + window.NOW.user_id);

  function get() {
    spUtil.update($scope);
  }

	$scope.$on('record.updated', function(name, data) {
		get();
	})

  /* Approve reject actions
	$scope.approve = function(id) {
    $scope.data.op = "approved";
    $scope.data.target = id;
    get();
  }
	
	$scope.reject = function(id) {
		// ask user for comments
		c.onPrompt(id);
	}
	
	c.onPrompt = function(id) {
		spModal.open({
			title: 'Enter rejection comments',
			message: '',
			input: true,
			value: c.rejectionComments
		}).then(function(str) {
			c.rejectionComments = str;
			if(str) {
				$scope.data.rejectionComments = str;
				$scope.data.op = "rejected";
				$scope.data.target = id;
				get();
			}
		})
	}*/
	
	this.getMaxShownLabel = function(maxEntries, totalCount) {
		if (totalCount == data.count)
			return "${First [0] of more than [1]}".replace('[0]', maxEntries).replace('[1]', totalCount);
		
		return "${First [0] of [1]}".replace('[0]', maxEntries).replace('[1]', totalCount);
	};
	
	function setFilter(state, data) {
		if(state == "active") {
			if(data == "My Approvals") {
				c.data.state = "active";
				c.data.newFilter = "approverDYNAMICjavascript:gs.getUserID()^sysapprovalISNOTEMPTY^state=requested";
			} 
			c.active = "true";
			c.server.update();
		}
		else if(state == "inactive") {
			if(data == "My Approvals") {
				c.data.state = "inactive";
				c.data.newFilter = "approverDYNAMICjavascript:gs.getUserID()^sysapprovalISNOTEMPTY^stateNOT INnot requested,requested";
			}
			c.active = "false";
			c.server.update();
		}
	}
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>.btn-block{&#13;
	padding: 6px 6px;&#13;
}&#13;
&#13;
/* Extra small devices (phones, up to 480px) */&#13;
@media screen and (max-width: 767px) {&#13;
  .btn-responsive{ &#13;
    font-size: 100%;&#13;
  }&#13;
}&#13;
/* Small devices (tablets, 768px and up) */&#13;
@media (min-width: 768px) and (max-width: 991px) {&#13;
  .btn-responsive{ &#13;
    font-size: 100%;&#13;
  }&#13;
}&#13;
/* tablets/desktops and up ----------- */&#13;
@media (min-width: 992px) and (max-width: 1199px) {&#13;
    .btn-responsive{ &#13;
    font-size: 70%;&#13;
    padding: 4px 4px;&#13;
  }&#13;
}&#13;
/* large desktops and up ----------- */&#13;
@media screen and (min-width: 1200px) {&#13;
    .btn-responsive{ &#13;
    font-size: 100%;&#13;
    }&#13;
}&#13;
&#13;
.word-wrap{&#13;
  overflow-wrap: break-word;&#13;
  word-wrap: break-word;&#13;
  -ms-word-break: break-all;&#13;
  word-break: break-word;&#13;
  -ms-hyphens: auto;&#13;
  -moz-hyphens: auto;&#13;
  -webkit-hyphens: auto;&#13;
  hyphens: auto;&#13;
}&#13;
&#13;
.panel__title {&#13;
  margin-bottom:0;&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>color,glyph</field_list>
        <has_preview>true</has_preview>
        <id>ucd-my-stuff-approvals</id>
        <internal>false</internal>
        <link/>
        <name>ucd_My Stuff Approvals</name>
        <option_schema>[{"hint":"If false, buttons are stacked on the right; if true, they are side-by-side","name":"portal","label":"Buttons stacked side by side","type":"boolean"}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[/* Adding rejection comments not working
if (input && input.op) {
	if(input.op == "approved") {
		var app = new GlideRecord("sysapproval_approver");
		if (app.get(input.target)) {
			app.state = input.op;
			app.update();
		}
	}
	else if(input.op =='rejected' && input.rejectionComments) {
		var app = new GlideRecord("sysapproval_approver");
		if(app.get(input.target)) {
			app.comments = input.rejectionComments;
			app.state = input.op;
			app.update();
		}
	}
}*/

data.ViewApprovalPageMsg = gs.getMessage("View approval page");

var gr = new GlideRecord('sysapproval_approver');

if(input && input.state) {
	data.state = input.state;
}
if (input && input.newFilter) {
	gr.addEncodedQuery(input.newFilter);
}
else {
	gr.addEncodedQuery("approverDYNAMICjavascript:gs.getUserID()^sysapprovalISNOTEMPTY^state=requested");
}
gr.orderByDesc('sys_updated_on'); // show most recent approvals first
gr.query();

data.count = gr.getRowCount();
data.displayLimit = 20;

var approvals = [];
var ids = [];
while (gr.next()) {
	if (approvals.length == data.displayLimit)
		break;
	
  var task = getRecordBeingApproved(gr);
	if (!task.isValidRecord())
		continue;

  ids.push(gr.getUniqueValue());
  var t = {};
  t.number = task.getDisplayValue();
  t.short_description = task.short_description.toString();
  if (task.isValidField("opened_by") && !task.opened_by.nil())
	  t.opened_by = task.opened_by.getDisplayValue();

  // requestor >> opener
  if (task.isValidField("requested_by") && !task.requested_by.nil())
	  t.opened_by = task.requested_by.getDisplayValue();

  if (task.start_date != null)
	t.start_date = task.start_date.toString();
  if (task.end_date != null)	
	t.end_date = task.end_date.toString();
  t.table = task.getLabel();
  if (task.getValue("price") > 0)
	  t.price = task.getDisplayValue("price");

  if (task.getValue("recurring_price") > 0)
	  t.recurring_price = task.getDisplayValue("recurring_price");

  t.recurring_frequency = task.getDisplayValue("recurring_frequency");

  var items = [];
  var idx = 0;
  var itemsGR = new GlideRecord("sc_req_item");
  itemsGR.addQuery("request", task.sys_id);
  itemsGR.query();
  if (itemsGR.getRowCount() > 1)
    t.short_description = itemsGR.getRowCount() + " requested items";

  while (itemsGR.next()) {
    var item = {};
    item.short_description = itemsGR.short_description.toString();
    if (itemsGR.getValue("price") > 0)
      item.price = itemsGR.getDisplayValue("price");
    if (itemsGR.getValue("recurring_price") > 0) {
      item.recurring_price = itemsGR.getDisplayValue("recurring_price");
      item.recurring_frequency = itemsGR.getDisplayValue("recurring_frequency");
    }
    if (itemsGR.getRowCount() == 1) {
      item.variables = $sp.getRecordVariablesArray(itemsGR);
      t.short_description = itemsGR.short_description.toString();
    }

    items[idx] = item;
    idx++;
  }

  var j = {};
  j.sys_id = gr.getUniqueValue();
  j.table = gr.getRecordClassName();
  j.task = t;
  if (task)
    j.variables = $sp.getRecordVariablesArray(task);

  j.items = items;
  j.state = gr.getValue("state");
  j.stateLabel = gr.state.getDisplayValue();
  approvals.push(j);
}
data.ids = ids;
data.approvals = approvals;

function getRecordBeingApproved(gr) {
  if (!gr.sysapproval.nil())
    return gr.sysapproval.getRefRecord();

  return gr.document_id.getRefRecord();
}]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>aztan</sys_created_by>
        <sys_created_on>2017-05-05 19:51:31</sys_created_on>
        <sys_id>fac29ba1dbea3200178e7fcfbf96190c</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>ucd_My Stuff Approvals</sys_name>
        <sys_package display_value="UCD Portal Demo" source="x_uocd2_ucd_portal">c2fa136f139176003527bd122244b0f5</sys_package>
        <sys_policy/>
        <sys_scope display_value="UCD Portal Demo">c2fa136f139176003527bd122244b0f5</sys_scope>
        <sys_update_name>sp_widget_fac29ba1dbea3200178e7fcfbf96190c</sys_update_name>
        <sys_updated_by>admin-aztan</sys_updated_by>
        <sys_updated_on>2017-09-26 17:59:35</sys_updated_on>
        <template><![CDATA[<div ng-if="showWidget == 'My Approvals'">
<div class="panel o-box" ng-if="data.approvals.length != 0">
    <h4 class="panel__title"><fa ng-if="::options.glyph.length" name="{{::options.glyph}}" class="m-r-sm" />${My Approvals}</h4>
  <div ng-if="data.approvals.length == 0">
  	${No pending approvals}
  </div>
  <div class="panel-body">
    <div ng-repeat="approval in data.approvals" class="sp-approval m-b">
      <div class="row">
        <div ng-class="contentColClass">
          <div ng-if="approval.task.number || approval.task.short_description">
            <a ng-href="?id=ucd_approval&table=sysapproval_approver&sys_id={{::approval.sys_id}}" title="{{data.ViewApprovalPageMsg}}">
              <span ng-if="approval.task.number">{{::approval.task.number}}</span>
              <span ng-if="approval.task.number && approval.task.short_description"> - </span>
              <span ng-if="approval.task.short_description">{{::approval.task.short_description}}</span>
            </a>
          </div>
          <div ng-if="approval.task.opened_by"><label>${Requestor}</label> {{::approval.task.opened_by}}</div>
          <div ng-if="approval.task.start_date"><label>${Start}</label> {{::approval.task.start_date}}</div>
          <div ng-if="approval.task.end_date"><label>${End}</label> {{::approval.task.end_date}}</div>
          <div ng-if="approval.task.price"><label>${Price}</label> {{::approval.task.price}}
            <span ng-if="approval.task.recurring_price"><label>${Recurring price}</label> {{::approval.task.recurring_price}} {{::approval.task.recurring_frequency}}</span>
          </div>
          
          <!-- Remove details on list view 
          <div ng-if="approval.items.length == 1">
            <div ng-repeat="item in approval.items">
              <div ng-if="item.variables.length > 0" ng-init="variable_toggle=false">
                <a href="javascript:void(0)" ng-click="variable_toggle = !variable_toggle">
                  <span class="glyphicon"
                        ng-class="{'glyphicon-chevron-down': !variable_toggle, 'glyphicon-chevron-up': variable_toggle}">
                  </span>
                  ${Details}
                </a>
                <div ng-repeat="variable in item.variables" ng-if="variable_toggle">
                  <label class="text-muted">{{::variable.label}}</label>
                  <div>{{::variable.display_value}}</div>
                </div>
              </div>
            </div>
          </div>

          <div ng-if="approval.variables.length > 0" ng-init="variable_toggle=false">
            <a href="javascript:void(0)" ng-click="variable_toggle = !variable_toggle">
              <span class="glyphicon"
                    ng-class="{'glyphicon-chevron-down': !variable_toggle, 'glyphicon-chevron-up': variable_toggle}">
              </span>
              ${Details}
            </a>
            <div ng-repeat="variable in approval.variables" ng-if="variable_toggle">
              <label>{{::variable.label}}</label>
              <div class="word-wrap">{{::variable.display_value}}</div>
            </div>
          </div>
        </div>-->

        <!-- Removing approve reject buttons
	<div ng-if="!options.portal" class="col-sm-3">
          <button name="approve" ng-if="approval.state == 'requested'" class="btn btn-primary btn-block btn-responsive" style="border-width:1px;" ng-click="approve(approval.sys_id);">${Approve}</button>
          <button name="reject" ng-if="approval.state == 'requested'" class="btn btn-default btn-block btn-responsive" ng-click="reject(approval.sys_id);">${Reject}</button>
          <button ng-if="approval.state == 'approved'" class="btn btn-success btn-block">{{approval.stateLabel}}</button>
          <button ng-if="approval.state == 'rejected'" class="btn btn-danger btn-block">{{approval.stateLabel}}</button>
          <button ng-if="approval.state != 'requested'" class="btn btn-default btn-block" style="visibility:hidden">{{approval.stateLabel}}</button>
        </div>
        <div ng-if="options.portal && approval.state == 'requested'" class="col-xs-6">
          <button name="reject" class="btn btn-default btn-block" ng-click="reject(approval.sys_id);">${Reject}</button>
        </div>
        <div ng-if="options.portal && approval.state == 'requested'" class="col-xs-6">
          <button name="approve" class="btn btn-primary btn-block" ng-click="approve(approval.sys_id);">${Approve}</button>
        </div>
        <div ng-if="options.portal && approval.state != 'requested'" class="col-xs-12">
          <button ng-if="approval.state == 'approved'" class="btn btn-success btn-block">{{approval.stateLabel}}</button>
          <button ng-if="approval.state == 'rejected'" class="btn btn-danger btn-block">{{approval.stateLabel}}</button>
        </div>-->
      </div>
    </div>
  </div>
  <div class="panel-footer" ng-if="data.count > data.displayLimit">
    <h4>First {{data.displayLimit}} of {{data.count}}
      <a ng-if="data.state=='active'" class="pull-right" href='?id=ucd_approvals'>View all</a>
    	<a ng-if="data.state=='inactive'" class="pull-right" href='?id=ucd_completed_approvals'>View all</a> 
    </h4>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
